name: Python pytest

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
      - 'wikibaseintegrator/**.py'
      - 'test/**.py'
      - 'pyproject.toml'
      - 'poetry.lock'
  pull_request:
    branches: [ '**' ]
    paths:
      - 'wikibaseintegrator/**.py'
      - 'test/**.py'
      - 'pyproject.toml'
      - 'poetry.lock'

jobs:
  build:
    name: pytest ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    container: ubuntu

    services:
      httpstatus:
        image: kennethreitz/httpbin
        ports:
          - 80:80

    strategy:
      matrix:
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12', '3.13-dev' ]

    steps:
      - uses: actions/checkout@v4.2.1

      - name: Install pipx
        run: apt update && apt install -y pipx && pipx ensurepath

      - name: Install dependencies for Python 3.13-dev
        if: matrix.python-version == '3.13-dev'
        run: apt install -y build-essential libffi-dev

      - name: Update path
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.2.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      # Need to install poetry again in the new python version
      - name: Install poetry
        run: python -m pip install poetry

      - name: Install dependencies
        run: |
          python -m poetry install --with dev

      - name: Test with pytest
        run: |
          python -m poetry run pytest
        env:
          HTTPSTATUS_SERVICE: "http://httpstatus"
